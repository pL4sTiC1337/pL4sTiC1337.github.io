<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Medium on </title>
    <link>https://pL4sTiC1337.github.io/tags/medium/</link>
    <description>Recent content in Medium on </description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 11 Apr 2025 10:54:25 -0500</lastBuildDate>
    <atom:link href="https://pL4sTiC1337.github.io/tags/medium/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HtB Celestial</title>
      <link>https://pL4sTiC1337.github.io/writeups/htb-celestial/</link>
      <pubDate>Fri, 11 Apr 2025 10:54:25 -0500</pubDate>
      <guid>https://pL4sTiC1337.github.io/writeups/htb-celestial/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://pL4sTiC1337.github.io/images/Celestial.png&#34; alt=&#34;HtB-Celestial&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Celestial is a medium difficulty machine which focuses on deserialization exploits. It is not the most realistic, however it provides a practical example of abusing client-size serialized objects in NodeJS framework.&lt;/p&gt;</description>
    </item>
    <item>
      <title>HtB Json</title>
      <link>https://pL4sTiC1337.github.io/writeups/htb-json/</link>
      <pubDate>Thu, 13 Mar 2025 13:19:43 -0400</pubDate>
      <guid>https://pL4sTiC1337.github.io/writeups/htb-json/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://pL4sTiC1337.github.io/images/Json.png&#34; alt=&#34;HtB-JSON&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;JSON is a medium difficulty Windows machine running an IIS server with an ASP.NET application. The application is found to be vulnerable to .NET deserialization, which is exploited using ysoserial.net. A custom .NET program is found to be installed, which on reverse engineering reveals encrypted credentials for an administrator. These credentials can be decrypted and used to gain access to the FTP folder.&lt;/p&gt;</description>
    </item>
    <item>
      <title>HtB Vault</title>
      <link>https://pL4sTiC1337.github.io/writeups/htb-vault/</link>
      <pubDate>Mon, 24 Feb 2025 22:28:29 -0500</pubDate>
      <guid>https://pL4sTiC1337.github.io/writeups/htb-vault/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://pL4sTiC1337.github.io/images/Vault.png&#34; alt=&#34;HtB-Vault&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Vault is medium to hard difficulty machine, which requires bypassing host and file upload restrictions, tunneling, creating malicious OpenVPN configuration files and PGP decryption.&lt;/p&gt;</description>
    </item>
    <item>
      <title>HtB Popcorn</title>
      <link>https://pL4sTiC1337.github.io/writeups/htb-popcorn/</link>
      <pubDate>Sun, 23 Feb 2025 23:16:24 -0500</pubDate>
      <guid>https://pL4sTiC1337.github.io/writeups/htb-popcorn/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://pL4sTiC1337.github.io/images/Popcorn.png&#34; alt=&#34;HtB-Popcorn&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Popcorn, while not overly complicated, contains quite a bit of content and it can be difficult for some users to locate the proper attack vector at first. This machine mainly focuses on different methods of web exploitation.&lt;/p&gt;</description>
    </item>
    <item>
      <title>HtB Cascade</title>
      <link>https://pL4sTiC1337.github.io/writeups/htb-cascade/</link>
      <pubDate>Fri, 14 Feb 2025 08:55:42 -0500</pubDate>
      <guid>https://pL4sTiC1337.github.io/writeups/htb-cascade/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://pL4sTiC1337.github.io/images/Cascade.png&#34; alt=&#34;HtB-Cascade&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Cascade is a medium difficulty Windows machine configured as a Domain Controller. LDAP anonymous binds are enabled, and enumeration yields the password for user &lt;code&gt;r.thompson&lt;/code&gt;, which gives access to a &lt;code&gt;TightVNC&lt;/code&gt; registry backup. The backup is decrypted to gain the password for &lt;code&gt;s.smith&lt;/code&gt;. This user has access to a .NET executable, which after decompilation and source code analysis reveals the password for the &lt;code&gt;ArkSvc&lt;/code&gt; account. This account belongs to the &lt;code&gt;AD Recycle Bin&lt;/code&gt; group, and is able to view deleted Active Directory objects. One of the deleted user accounts is found to contain a hardcoded password, which can be reused to login as the primary domain administrator.&lt;/p&gt;</description>
    </item>
    <item>
      <title>HtB Escape</title>
      <link>https://pL4sTiC1337.github.io/writeups/htb-escape/</link>
      <pubDate>Thu, 13 Feb 2025 11:21:41 -0500</pubDate>
      <guid>https://pL4sTiC1337.github.io/writeups/htb-escape/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://pL4sTiC1337.github.io/images/Escape.png&#34; alt=&#34;HtB-Escape&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Escape is a Medium difficulty Windows Active Directory machine that starts with an SMB share that guest authenticated users can download a sensitive PDF file. Inside the PDF file temporary credentials are available for accessing an MSSQL service running on the machine. An attacker is able to force the MSSQL service to authenticate to his machine and capture the hash. It turns out that the service is running under a user account and the hash is crackable. Having a valid set of credentials an attacker is able to get command execution on the machine using WinRM. Enumerating the machine, a log file reveals the credentials for the user &lt;code&gt;ryan.cooper&lt;/code&gt;. Further enumeration of the machine, reveals that a Certificate Authority is present and one certificate template is vulnerable to the ESC1 attack, meaning that users who are legible to use this template can request certificates for any other user on the domain including Domain Administrators. Thus, by exploiting the ESC1 vulnerability, an attacker is able to obtain a valid certificate for the Administrator account and then use it to get the hash of the administrator user.&lt;/p&gt;</description>
    </item>
    <item>
      <title>HtB Giddy</title>
      <link>https://pL4sTiC1337.github.io/writeups/htb-giddy/</link>
      <pubDate>Wed, 12 Feb 2025 10:46:31 -0500</pubDate>
      <guid>https://pL4sTiC1337.github.io/writeups/htb-giddy/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://pL4sTiC1337.github.io/images/Giddy.png&#34; alt=&#34;Giddy&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Giddy is a medium difficulty machine, which highlights how low privileged SQL Server logins can be used to compromise the underlying SQL Server service account. This is an issue in many environments, and depending on the configuration, the service account may have elevated privileges across the domain. It also features Windows registry enumeration and custom payload creation.&lt;/p&gt;</description>
    </item>
    <item>
      <title>HtB Faculty</title>
      <link>https://pL4sTiC1337.github.io/writeups/htb-faculty/</link>
      <pubDate>Tue, 11 Feb 2025 14:32:53 -0500</pubDate>
      <guid>https://pL4sTiC1337.github.io/writeups/htb-faculty/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://pL4sTiC1337.github.io/images/Faculty.png&#34; alt=&#34;HtB Faculty&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Faculty is a medium Linux machine that features a PHP web application that uses a library which is vulnerable to local file inclusion. Exploiting the LFi in this library reveals a password which can be used to log in as a low-level user called &lt;code&gt;gbyolo&lt;/code&gt; over SSH. The user &lt;code&gt;gbyolo&lt;/code&gt; has permission to run an &lt;code&gt;npm&lt;/code&gt; package called &lt;code&gt;meta-git&lt;/code&gt; as the &lt;code&gt;developer&lt;/code&gt; user. The version of the &lt;code&gt;meta-git&lt;/code&gt; installed on this box is vulnerable to code injection, which can be exploited to escalate the privileges to the user &lt;code&gt;developer&lt;/code&gt;. The privilege escalation to &lt;code&gt;root&lt;/code&gt; can be performed by exploiting the &lt;code&gt;CAP_SYS_PTRACE&lt;/code&gt; capability to inject shellcode into a process running as &lt;code&gt;root&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>HtB Jab</title>
      <link>https://pL4sTiC1337.github.io/writeups/htb-jab/</link>
      <pubDate>Wed, 05 Feb 2025 16:43:23 -0500</pubDate>
      <guid>https://pL4sTiC1337.github.io/writeups/htb-jab/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://pL4sTiC1337.github.io/images/Jab.png&#34; alt=&#34;Jab&#34;&gt;&#xA;Jab is a medium-difficulty Windows machine that features an Openfire XMPP server, hosted on a Domain Controller (DC). Public registration on the XMPP server allows the user to register an account. Then, by retrieving a list of all the users on the domain, a kerberoastable account is found, which allows the attacker to crack the retrieved hash for the user&amp;rsquo;s password. By visiting the account&amp;rsquo;s XMPP chat rooms, another account&amp;rsquo;s password is retrieved. This new account has DCOM privileges over the DC, thus granting the attacker local access on the machine. Finally, a malicious plugin uploaded through the locally-hosted Openfire Administration Panel gives the user SYSTEM access.&lt;/p&gt;</description>
    </item>
    <item>
      <title>HtB Hospital</title>
      <link>https://pL4sTiC1337.github.io/writeups/htb-hospital/</link>
      <pubDate>Tue, 04 Feb 2025 08:52:13 -0500</pubDate>
      <guid>https://pL4sTiC1337.github.io/writeups/htb-hospital/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://pL4sTiC1337.github.io/images/Hospital.png&#34; alt=&#34;HtB Hospital&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Hospital is a medium-difficulty Windows machine that hosts an Active Directory environment, a web server, and a &lt;code&gt;RoundCube&lt;/code&gt; instance. The web application has a file upload vulnerability that allows the execution of arbitrary PHP code, leading to a reverse shell on the Linux virtual machine hosting the service. Enumerating the system reveals an outdated Linux kernel that can be exploited to gain root privileges, via &lt;a href=&#34;https://nvd.nist.gov/vuln/detail/CVE-2023-35001&#34; target=&#34;_blank&#34;&gt;CVE-2023-35001&lt;/a&gt;. Privileged access allows &lt;code&gt;/etc/shadow&lt;/code&gt; hashes to be read and subsequently cracked, yielding credentials for the &lt;code&gt;RoundCube&lt;/code&gt; instance. Emails on the service hint towards the use of &lt;code&gt;GhostScript&lt;/code&gt;, which opens up the target to exploitation via &lt;a href=&#34;https://nvd.nist.gov/vuln/detail/CVE-2023-36664&#34; target=&#34;_blank&#34;&gt;CVE-2023-36664&lt;/a&gt;, a vulnerability exploited by crafting a malicious Embedded PostScript (EPS) file to achieve remote code execution on the Windows host. System access is then obtained by either of two ways: using a keylogger to capture &lt;code&gt;administrator&lt;/code&gt; credentials, or by abusing misconfigured &lt;code&gt;XAMPP&lt;/code&gt; permissions.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
